version: "2"
services:
  app:
    container_name: app
    restart: always
    build: .
    ports:
      - "1234:3000"
    depends_on:
      - mongo # This service depends on mongo. Start that first.
    links:
      - mongo
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure


  mongo:
    container_name: mongo
    image: mongo
    volumes:
      - db-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - backend
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure

  visualizer:
    image: dockersamples/visualizer
    ports:
      - "3000:8080"
    stop_grace_period: 1m30s
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]

networks:
  backend:

volumes:
  db-data:

